openapi: "3.0.0"

info:
  title: Navi by Deepgram
  description: REST API for Navi, Deepgram's AI assistant.
  termsOfService: https://deepgram.com/terms/
  contact:
    email: devrel@deepgram.com
  license:
    name: LicenseRef-Proprietary-Deepgram
  version: 1.0.0

servers:
  - url: https://navi.deepgram.com
    description: Production server

paths:
  /oauth/token:
    post:
      summary: Obtain or refresh authentication tokens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/AnonymousTokenRequest"
                - $ref: "#/components/schemas/RefreshTokenRequest"
      responses:
        "200":
          description: Successful token response
          content:
            application/json:
              schema:
                $ref: "./schemas/components.yaml#/schemas/TokenResponse"
        "400":
          description: Invalid grant type or request format
        "401":
          description: Invalid refresh token

  /chat/completions:
    post:
      summary: Create a chat completion
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatCompletionRequest"
      responses:
        "200":
          description: Successful completion response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatCompletionResponse"
        "400":
          description: Invalid request format
        "401":
          description: Unauthorized
        "429":
          description: Rate limit exceeded

components:
  schemas:
    AnonymousTokenRequest:
      type: object
      required:
        - grant_type
      properties:
        grant_type:
          type: string
          enum: [anonymous]

    RefreshTokenRequest:
      type: object
      required:
        - grant_type
        - refresh_token
      properties:
        grant_type:
          type: string
          enum: [refresh_token]
        refresh_token:
          type: string

    ChatCompletionRequest:
      type: object
      required:
        - messages
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/ChatMessage"
          minItems: 1

    ChatMessage:
      type: object
      required:
        - role
        - content
      properties:
        role:
          type: string
          enum: [system, user, assistant]
        content:
          type: string
        name:
          type: string

    ChatCompletionResponse:
      type: object
      required:
        - id
        - object
        - created
        - model
        - choices
      properties:
        id:
          type: string
        object:
          type: string
          enum: [chat.completion]
        created:
          type: integer
        model:
          type: string
        choices:
          type: array
          items:
            type: object
            required:
              - index
              - message
              - finish_reason
            properties:
              index:
                type: integer
              message:
                $ref: "#/components/schemas/ChatMessage"
              finish_reason:
                type: string
                enum: [stop, length, content_filter]
        usage:
          type: object
          properties:
            prompt_tokens:
              type: integer
            completion_tokens:
              type: integer
            total_tokens:
              type: integer

  securitySchemes:
    $ref: "./schemas/components.yaml#/securitySchemes"

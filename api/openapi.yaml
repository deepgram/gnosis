openapi: "3.0.0"

info:
  title: Gnosis by Deepgram
  description: REST API for Gnosis, Deepgram's AI assistant.
  termsOfService: https://deepgram.com/terms/
  contact:
    email: devrel@deepgram.com
  license:
    name: LicenseRef-Proprietary-Deepgram
  version: 1.0.0

servers:
  - url: https://gnosis.deepgram.com
    description: Production server

paths:
  /v1/oauth/token:
    post:
      summary: Obtain authentication tokens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TokenRequest"
      responses:
        "200":
          description: Successful token response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
        "400":
          description: Invalid grant type or request format
        "401":
          description: Invalid refresh token

  /v1/chat/completions:
    post:
      summary: Create a chat completion
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatCompletionRequest"
      responses:
        "200":
          description: Successful completion response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatCompletionResponse"
        "400":
          description: Invalid request format
        "401":
          description: Unauthorized
        "429":
          description: Rate limit exceeded

components:
  schemas:
    TokenRequest:
      type: object
      required:
        - grant_type
      properties:
        grant_type:
          type: string
          enum: [anonymous]

    TokenResponse:
      type: object
      required:
        - access_token
        - token_type
        - expires_in
      properties:
        access_token:
          type: string
        token_type:
          type: string
          enum: [Bearer]
        expires_in:
          type: integer

    ChatCompletionRequest:
      type: object
      required:
        - messages
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/ChatMessage"
          minItems: 1
        temperature:
          type: number
          minimum: 0
          maximum: 2
          default: 1
        max_tokens:
          type: integer
          minimum: 1
          maximum: 4096
          default: 1024
        top_p:
          type: number
          minimum: 0
          maximum: 1
          default: 1
        presence_penalty:
          type: number
          minimum: -2
          maximum: 2
          default: 0
        frequency_penalty:
          type: number
          minimum: -2
          maximum: 2
          default: 0

    ChatCompletionResponse:
      type: object
      required:
        - messages
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/ChatMessage"

    ChatMessage:
      type: object
      required:
        - role
        - content
      properties:
        role:
          type: string
          enum: [user, assistant]
        content:
          type: string
      additionalProperties: false

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: Use the access token to authenticate your requests


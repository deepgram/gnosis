openapi: "3.0.0"

info:
  title: Gnosis by Deepgram
  description: Gnosis app REST API, Deepgram's AI assistant.
  termsOfService: https://deepgram.com/terms/
  contact:
    email: devrel@deepgram.com
  license:
    name: LicenseRef-Proprietary-Deepgram
  version: 1.0.0

servers:
  - url: https://gnosis.deepgram.com
    description: Production server

paths:
  /v1/oauth/authorize:
    post:
      summary: Authorization endpoint
      description: |
        Endpoint for initiating app-to-app authorization flows.
        Requires a valid session cookie and the client identifier (`client_id`).
        Returns an authorization `code` and the `state` value (if provided) for subsequent token exchange.
      parameters:
        - in: cookie
          name: gnosis_session
          required: true
          schema:
            type: string
          description: Session cookie for authentication, must be a valid JWT token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - client_id
                - state
              properties:
                client_id:
                  type: string
                  description: The client identifier issued to the client.
                state:
                  type: string
                  description: An opaque value to maintain state between the request and response.
      responses:
        "200":
          description: Successful authorization response
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                  - state
                properties:
                  code:
                    type: string
                    description: The authorization code to exchange for an access token.
                  state:
                    type: string
                    description: The state value provided in the request, if any.
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - Invalid session cookie or client credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/oauth/token:
    post:
      summary: Token exchange endpoint
      description: |
        Exchange client credentials or an authorization code for an access token.
        Supports two grant types:
        - **Client Credentials:** Direct access for server-to-server communication.
        - **Authorization Code:** Token exchange following `/v1/oauth/authorize`.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - title: Client Credentials Grant
                  description: Use this grant type for server-to-server communication with `client_id` and `client_secret`.
                  type: object
                  required:
                    - grant_type
                    - client_id
                    - client_secret
                  properties:
                    grant_type:
                      type: string
                      enum: [client_credentials]
                      description: The grant type for client credentials authentication.
                    client_id:
                      type: string
                      description: The client identifier issued to the client.
                    client_secret:
                      type: string
                      description: The client secret issued to the client.
                - title: Authorization Code Grant
                  description: Use this grant type to exchange an authorization code for an access token.
                  type: object
                  required:
                    - grant_type
                    - client_id
                    - code
                  properties:
                    grant_type:
                      type: string
                      enum: [authorization_code]
                      description: The grant type for authorization code exchange.
                    client_id:
                      type: string
                      description: The client identifier issued to the client.
                    code:
                      type: string
                      description: The authorization code issued from `/v1/oauth/authorize`.
      responses:
        "200":
          description: Successful token response
          content:
            application/json:
              schema:
                type: object
                required:
                  - access_token
                  - token_type
                  - expires_in
                properties:
                  access_token:
                    type: string
                    description: The access token for API calls.
                  token_type:
                    type: string
                    enum: [Bearer]
                    description: The type of token issued.
                  expires_in:
                    type: integer
                    description: Time in seconds until the token expires.
        "400":
          description: Invalid request or parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - Invalid client credentials or authorization code
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/chat/completions:
    post:
      summary: Create a chat completion
      description: |
        Create a chat completion with Deepgram's AI assistant.
      security:
        - clientCredentials: []
        - authorizationCode: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatCompletionRequest"
      responses:
        "200":
          description: Successful completion response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatCompletionResponse"
        "400":
          description: Invalid request format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - Invalid or missing access token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "429":
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: A single ASCII error code identifying the type of error.
          enum:
            - invalid_request
            - invalid_client
            - invalid_grant
            - unauthorized_client
            - unsupported_grant_type
            - invalid_scope
            - access_denied
            - unsupported_response_type
            - server_error
            - temporarily_unavailable
        error_description:
          type: string
          description: A human-readable ASCII text providing additional information about the error.
        error_uri:
          type: string
          format: uri
          description: A URI identifying a human-readable web page with information about the error.

    ChatCompletionRequest:
      type: object
      required:
        - messages
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/ChatMessage"
          minItems: 1
        temperature:
          type: number
          minimum: 0
          maximum: 2
          default: 1
        max_tokens:
          type: integer
          minimum: 1
          maximum: 4096
          default: 1024
        top_p:
          type: number
          minimum: 0
          maximum: 1
          default: 1
        presence_penalty:
          type: number
          minimum: -2
          maximum: 2
          default: 0
        frequency_penalty:
          type: number
          minimum: -2
          maximum: 2
          default: 0

    ChatCompletionResponse:
      type: object
      required:
        - messages
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/ChatMessage"

    ChatMessage:
      type: object
      required:
        - role
        - content
      properties:
        role:
          type: string
          enum: [user, assistant, system]
        content:
          type: string
      additionalProperties: false

  securitySchemes:
    client_credentials:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: /v1/oauth/token
          scopes: {}
    authorization_code:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: /v1/oauth/authorize
          tokenUrl: /v1/oauth/token
          scopes: {}
